#!/usr/bin/env python
# encoding: utf-8
import sys
import logging
import subprocess
import string

import beanstalkc

logging.basicConfig()
LOG = logging.getLogger(__name__)
LOG.setLevel(logging.DEBUG)

q_host = '127.0.0.1'
q_port = 11300


if __name__ == "__main__":
    if len(sys.argv) < 4:
        print "Usage %s <input queue> <output queue> <command>" % (sys.argv[0])
        sys.exit(1)

    try:
        q_host = os.environ.get('QUEUEIT_HOST', '127.0.0.1')
        q_port = int(os.environ.get('QUEUEIT_PORT', 11300))
    except:
        print "Wrong QUEUEIT_HOST or QUEUEIT_PORT parameter. Using defaults: %s, %s" % (q_host, q_port)


    QIN_NAME, QOUT_NAME, Q_CMD = sys.argv[1:]
    try:
        QIN = beanstalkc.Connection(host=q_host, port=q_port)
    except beanstalkc.SocketError:
        print "Can't connect to %s:%s" % (q_host, q_port)
        sys.exit(1)

    try:
        QOUT = beanstalkc.Connection(host=q_host, port=q_port)
    except beanstalkc.SocketError:
        print "Can't connect to %s:%s" % (q_host, q_port)
        sys.exit(1)

    QIN.watch(QIN_NAME)
    LOG.info(u"Watching queues: %s" % QIN.watching())

    while True:
        job = QIN.reserve()
        params = job.body
        cmd = '%s "%s"' % (Q_CMD, params)
        LOG.debug(u"Calling command %s" % cmd)
        retcode = subprocess.call(cmd, shell=True)
        if not retcode == 0:
            LOG.error(u"Worker command was exited with retcode %s" % retcode)
            job.release(delay=1)
            LOG.info(u"Job %s released" % job.jid)
        else:
            QOUT.use(QOUT_NAME)
            jid = QOUT.put(str(params))
            job.delete()
            LOG.info(u"New job put in to %s: %s" % (QOUT_NAME, jid))

